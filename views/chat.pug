extend layout

block content
    body
        .container
            .row
              .col-md-6.offset-md-3.col-sm-12
                h1.text-center
                  | MongoChat
                  button#clear.btn.btn-danger Clear
                #status
                #chat
                  h5 Logged in as
                    p#username #{user.name}
                  br
                  .card
                    #messages.card-block
                  br
                  textarea#textarea.form-control(placeholder='Enter message...')
            script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js')
            script.
              (function(){
              var element = function(id){
              return document.getElementById(id);
              }
              // Get Elements
              var status = element('status');
              var messages = element('messages');
              var textarea = element('textarea');
              var clearBtn = element('clear');
              var username = document.getElementById('username').innerHTML;
              // Set default status
              var statusDefault = status.textContent;
              var setStatus = function(s){
              // Set status
              status.textContent = s;
              if(s !== statusDefault){
              var delay = setTimeout(function(){
              setStatus(statusDefault);
              }, 4000);
              }
              }
              // Connect to socket.io
              var socket = io.connect('localhost:3000');
              // Check for connection
              if(socket !== undefined){
              console.log('Connected to socket...');
              // Handle Output
              socket.on('output', function(data){
              console.log(data);
              if(data.length){
              for(var x = 0;x < data.length;x++){
              // Build out message div
                var message = document.createElement('div');
                message.setAttribute('class', 'chat-message');
                message.textContent = data[x].name+": "+data[x].message;
                messages.appendChild(message);
                messages.insertBefore(message, messages.firstChild);
              }
              }
              });
              // Get Status From Server
              socket.on('status', function(data){
              // get message status
              setStatus((typeof data === 'object')? data.message : data);
              // If status is clear, clear text
              if(data.clear){
              textarea.value = '';
              }
              });
              // Handle Input
              textarea.addEventListener('keydown', function(event){
              if(event.which === 13 && event.shiftKey == false){
              // Emit to server input
              //console.log(username);
              socket.emit('input', {
              name: username,
              message:textarea.value
              });
              event.preventDefault();
              }
              })
              // Handle Chat Clear
              clearBtn.addEventListener('click', function(){
              socket.emit('clear');
              });
              // Clear Message
              socket.on('cleared', function(){
              messages.textContent = '';
              });
              }
              })();
